{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" CPF \\u00E9 obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Digite um CPF v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    auth;\n    router;\n    fb;\n    form;\n    loading = false;\n    constructor(auth, router, fb) {\n      this.auth = auth;\n      this.router = router;\n      this.fb = fb;\n      this.form = this.fb.group({\n        cpf: ['', [Validators.required, Validators.pattern(/^\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}$/)]],\n        senha: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    login() {\n      if (this.form.invalid) return;\n      this.loading = true;\n      this.auth.login(this.form.value.cpf, this.form.value.senha).subscribe({\n        next: res => {\n          localStorage.setItem('token', res.token);\n          const payload = JSON.parse(atob(res.token.split('.')[1]));\n          if (payload.role === 'admin') {\n            this.router.navigate(['/admin/chat']);\n          } else {\n            this.router.navigate(['/cliente/chat']);\n          }\n        },\n        error: err => {\n          this.loading = false;\n          alert(err.message || 'Erro ao fazer login');\n        },\n        complete: () => this.loading = false\n      });\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 16,\n      vars: 2,\n      consts: [[1, \"cadastro-content\"], [1, \"login-container\"], [1, \"login-card\"], [1, \"mat-headline\", \"text-center\"], [3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"cpf\", \"required\", \"\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0);\n          i0.ɵɵelement(1, \"app-imagem\");\n          i0.ɵɵelementStart(2, \"app-formulario\")(3, \"div\", 1)(4, \"mat-card\", 2)(5, \"h2\", 3);\n          i0.ɵɵtext(6, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(8, \"mat-form-field\", 5)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"CPF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 2, 0, \"mat-error\", 7)(13, LoginComponent_mat_error_13_Template, 2, 0, \"mat-error\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 8);\n          i0.ɵɵtext(15, \" Entrar \");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_0_0;\n          let tmp_1_0;\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx.form.get(\"cpf\")) == null ? null : tmp_0_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.form.get(\"cpf\")) == null ? null : tmp_1_0.hasError(\"pattern\"));\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormControlName, RouterModule, MatCardModule, i5.MatCard, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatError, MatInputModule, i7.MatInput, MatButtonModule, i8.MatButton, MatProgressSpinnerModule],\n      styles: [\".cadastro-content[_ngcontent-%COMP%]{display:flex;height:100vh}app-formulario[_ngcontent-%COMP%], app-imagem[_ngcontent-%COMP%]{flex:1;height:100%;padding:20px;box-sizing:border-box;display:flex;align-items:center;justify-content:center}@media screen and (max-width: 768px){.cadastro-content[_ngcontent-%COMP%]{flex-direction:column}app-imagem[_ngcontent-%COMP%]{display:none}app-formulario[_ngcontent-%COMP%]{display:flex;height:auto;max-width:100%;padding:20px;align-items:center;justify-content:center}}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}