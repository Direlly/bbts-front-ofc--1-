{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    http;\n    router;\n    baseUrl = 'http://localhost:8080';\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n    }\n    register(nome, email, cpf, senha) {\n      // Remove formatação do CPF\n      const cpfSemMascara = cpf.replace(/\\D/g, '');\n      return this.http.post(`${this.baseUrl}/auth/register`, {\n        nome,\n        email,\n        cpf: cpfSemMascara,\n        senha\n      }).pipe(tap(res => {\n        if (res.token) {\n          localStorage.setItem('token', res.token);\n          // Assume que novos registros são sempre clientes\n          localStorage.setItem('role', 'cliente');\n        }\n      }));\n    }\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n      this.router.navigate(['/login']);\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n    isAdmin() {\n      return localStorage.getItem('role') === 'admin';\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    getCurrentUserRole() {\n      return localStorage.getItem('role');\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}