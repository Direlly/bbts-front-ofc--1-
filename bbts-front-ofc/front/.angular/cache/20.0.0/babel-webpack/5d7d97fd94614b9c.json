{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { EqualToValidatorDirective } from '../shared/validators/equal-to.validator';\nimport { ImagemComponent } from '../shared/imagem/imagem.component';\nimport { NavbarComponent } from './layout/navbar.component';\nlet RegisterComponent = class RegisterComponent {\n  auth;\n  router;\n  snackBar;\n  nome = '';\n  email = '';\n  cpf = '';\n  senha = '';\n  confirmarSenha = '';\n  constructor(auth, router, snackBar) {\n    this.auth = auth;\n    this.router = router;\n    this.snackBar = snackBar;\n  }\n  formatCPF() {\n    let value = this.cpf.replace(/\\D/g, '');\n    if (value.length > 3) {\n      value = value.substring(0, 3) + '.' + value.substring(3);\n    }\n    if (value.length > 7) {\n      value = value.substring(0, 7) + '.' + value.substring(7);\n    }\n    if (value.length > 11) {\n      value = value.substring(0, 11) + '-' + value.substring(11);\n    }\n    this.cpf = value.substring(0, 14);\n  }\n  register() {\n    if (this.senha !== this.confirmarSenha) {\n      this.snackBar.open('As senhas nÃ£o coincidem', 'Fechar', {\n        duration: 5000\n      });\n      return;\n    }\n    const cpfSemMascara = this.cpf.replace(/\\D/g, '');\n    this.auth.register(this.nome, this.email, cpfSemMascara, this.senha).subscribe({\n      next: () => {\n        this.snackBar.open('Cadastro realizado com sucesso!', 'Fechar', {\n          duration: 3000\n        });\n        this.router.navigate(['/login']);\n      },\n      error: err => {\n        let errorMessage = 'Erro ao realizar cadastro. Tente novamente.';\n        if (err.error && err.error.message) {\n          errorMessage = err.error.message;\n        }\n        this.snackBar.open(errorMessage, 'Fechar', {\n          duration: 5000\n        });\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  standalone: true,\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatCardModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatSnackBarModule, MatIconModule, EqualToValidatorDirective, ImagemComponent, NavbarComponent]\n})], RegisterComponent);\nexport { RegisterComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}